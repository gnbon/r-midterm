mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(meat_tot=mean(total)) %>%
arrange(desc(mean_tot)) %>%
head(5)
# 제조사별로 "suv" 자동차들의 통합연비 평균을 구한 후 내림차순으로 정렬하여
# 1~5위까지 출력
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(meat_tot=mean(total)) %>%
arrange(desc(mean_tot)) %>%
head(5)
# 제조사별로 "suv" 자동차들의 통합연비 평균을 구한 후 내림차순으로 정렬하여
# 1~5위까지 출력
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(meat_tot=mean(total)) %>%
arrange(desc(mean_tot)) %>%
head(5)
mpg %>%
group_by(manufacturer) %>%
mpg %>%
group_by(manufacturer)
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv")
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2)
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(meat_tot=mean(total))
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(mean_tot=mean(total)) %>%
arrange(desc(mean_tot))
mpg %>%
group_by(manufacturer) %>%
filter(class == "suv") %>%
mutate(total = (cty+hwy)/2) %>%
summarise(mean_tot=mean(total)) %>%
arrange(desc(mean_tot)) %>%
head(5)
mpg %>%
filter(manufacturer == "audi" | manufacturer == "toyota") %>%
group_by(manufacturer)
mpg %>%
filter(manufacturer == "audi" | manufacturer == "toyota") %>%
group_by(manufacturer) %>%
summarise(mean_cty=mean(cty))
# "audi"와 "toyota" 중 어느 제조사의 도시연비가 평균적으로 더 높은가?
mpg %>%
filter(manufacturer == "audi" | manufacturer == "toyota") %>%
group_by(manufacturer) %>%
summarise(avg=mean(cty)) %>%
arrange(desc(avg))
mpg
mpg %>%
filter(class == "compact")
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n=n())
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(n=n()) %>%
arrange(desc(n))
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(count=n()) %>%
arrange(desc(count))
mpg_re = (mpg %>%
group_by(year, trans) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total)) %>%
arrange(desc(mean_tot))
)
mpg_re = (mpg %>%
group_by(year, trans)
mpg %>%
mpg %>%
group_by(year, trans)
mpg %>%
group_by(year, trans) %>%
mutate(total=(cty+hwy)/2)
mpg %>%
group_by(year, trans) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(manufacturer) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(manufacturer, trans) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(manufacturer, displ) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total))
mpg %>%
group_by(manufacturer) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total), displ)
library(ggplot2)
library(dplyr)
library(gapminder)
y = gapminder %>%
group_by(year, continent) %>%
summarise(c_pop = sum(pop))
gapminder %>%
group_by(year, continent) %>%
gapminder %>%
group_by(year, continent)
gapminder %>%
group_by(year, continent)
gapminder %>%
group_by(year, continent) %>%
summarise(c_pop = sum(pop))
mpg %>%
group_by(manufacturer) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(mean_tot=mean(total), displ)
plot(yy$year, y$c_pop, col=y$continent, pch = c(1:length(levels(y$continent))))
plot(y$year, y$c_pop, col=y$continent, pch = c(1:length(levels(y$continent))))
legend("topleft", legend = levels((y$continent)))
legend("topleft",
legend = levels((y$continent),
pch = c(1:length(levels(y$continent))),
col = c(1:length(levels(y$continent)))
legend("topleft",
legend("topleft",
legend = levels((y$continent),
pch = c(1:length(levels(y$continent))),
col = c(1:length(levels(y$continent)))
)
legend("topleft",
legend("topleft",
legend = levels((y$continent)),
pch = c(1:length(levels(y$continent))),
col = c(1:length(levels(y$continent)))
)
# ----- mpg ----- #
ggplot(data=mpg, aes(x=displ, y=hwy, col=drv)) +
geam_point
# ----- mpg ----- #
ggplot(data=mpg, aes(x=displ, y=hwy, col=drv)) +
geam_point()
# ----- mpg ----- #
ggplot(data=mpg, aes(x=displ, y=hwy, col=drv)) +
geom_point()
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_point()
# cyl은 형식은 정수형이나 내용은 범주형이므로 factor() 사용
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_bar()
# cyl은 형식은 정수형이나 내용은 범주형이므로 factor() 사용
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_point()
ggplot(data=mpg1, aes(x=displ, y=total, col=factor(manufactor))) +
geom_point()
# 제조사별로 도시와 고속도로 연비의 평균인 통합연비 변수를 추가하여,
# 배기량에 따른 통합연비의 변화추세가 제조사별로 쉽게 비교되도록 시각화하기.
mpg1 = mpg %>%
group_by(manufacturer) %>%
mutate(total=(cty+hwy)/2)
ggplot(data=mpg1, aes(x=displ, y=total, col=factor(manufactor))) +
geom_point()
ggplot(data=mpg1, aes(x=displ, y=total, col=factor(manufacturer))) +
geom_point()
mpg %>%
group_by(year) %>%
mutate(total=(cty+hwy)/2)
mpg1 = mpg %>%
group_by(year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = total)
mpg1 = mpg %>%
group_by(year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
mpg %>%
group_by(year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
help(mpg)
mpg %>%
group_by(model, year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total)
View(mpg)
mpg %>%
group_by(model, year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise()
mpg %>%
group_by(model, year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
mpg %>%
group_by(model, year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = total) %>%
mpg %>%
group_by(model, year) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = total)
mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total)) %>%
arrange(desc(total))
help(gapminder)
gapminder %>%
group_by(continent) %>%
summarise(mean(lifeExp))
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeexp)) +
geom_line()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_line()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log10()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent), size=pop)) +
geom_line() +
scale_x_log10()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log1
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log1()
gapminder
ggplot %>%
select(continent == 'Africa')
gapminder %>%
select(continent == 'Africa')
gapminder %>%
select(continent == 'Africa')
gapminder %>%
select(continent == 'Africa')
gapminder %>%
filter(continent == 'Africa' & )
gapminder %>%
filter(continent == 'Africa' & year == 2007)
gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60)
ggplot(data=gapminder_africa, aes(x=gdpPercap, y=lifeExp, col=factor(country))) +
geom_point()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60)
ggplot(data=gapminder_africa, aes(x=gdpPercap, y=lifeExp, col=factor(country))) +
geom_point()
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
table()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_point()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_point()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60)
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_point()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(y=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(x=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(y=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap, col=factor(country))) +
geom_line()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap, col=factor(country))) +
geom_point()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap, col=factor(country))) +
geom_point() +
facet_wrap()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap, col=factor(country))) +
geom_point() +
xlim()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
summarise(gdpPercap)
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
summarise(gdpPercap=sum(gdpPercap))
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point() +
xlim()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60) %>%
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point() +
xlim()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60)
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point() +
xlim()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point() +
## 5. mpg
#  자동차 출시년도와 구동방식에 따라 어떤 차종이 통합연비 평균 제일 좋은지
# 순서대로 구하고 막대그래프 그리기 ??
library(ggplot2)
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point()
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_point()
ggplot(data=mpg, aes(x=displ, y=hwy, col=cyl)) +
geom_point()
#
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_point()
# layer이므로 겹칠 수 있음
ggplot(data=mpg, aes(x=displ, y=hwy, col=factor(cyl))) +
geom_point() + geom_line()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log1()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log1()
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_point()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap)) +
geom_histogram()
ggplot(data=gapminder_africa, aes(x=gdpPercap)) +
geom_histogram()
ggplot(data=gapminder_africa, aes(y=gdpPercap)) +
geom_histogram()
ggplot(data=gapminder_africa, aes(x=gdpPercap)) +
geom_histogram()
ggplot(data=gapminder_africa, aes(x=gdpPercap, col=factor(country))) +
geom_histogram()
ggplot(data=gapminder_africa, aes(y=gdpPercap, col=factor(country))) +
geom_histogram()
ggplot(data=gapminder_africa, aes(x = country, y=gdpPercap, col=factor(country))) +
geom_col()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_boxplot()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_bar()
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_col()
mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total)) %>%
arrange(desc(total))
mpg1 = mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total)) %>%
arrange(desc(total))
mpg1 = mpg %>%
group_by(year, model) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
mpg1 = mpg %>%
group_by(year, trans) %>%
mutate(total=(cty+hwy)/2) %>%
summarise(total = mean(total))
mpg
mpg1 = mpg %>%
group_by(year, trans) %>%
mutate(total=(cty+hwy)/2)
# 제조사별로 도시와 고속도로 연비의 평균인 통합연비 변수를 추가하여,
# 배기량에 따른 통합연비의 변화추세가 제조사별로 쉽게 비교되도록 시각화하기.
mpg1 = mpg %>%
group_by(manufacturer) %>%
mutate(total=(cty+hwy)/2)
ggplot(data=mpg1, aes(x=displ, y=total, col=factor(manufacturer))) +
geom_point()
# 아프리카 대륙에서 2007년도 기준으로 평균기대수명이 60세 이상인 나라들만 추출하여 국가당 1인당 gdb가 한눈에 쉽게 비교될 수 있도록 시각화
gapminder_africa = gapminder %>%
filter(continent == 'Africa' & year == 2007 & lifeExp >= 60)
ggplot(data=gapminder_africa, aes(x=country, y=gdpPercap, col=factor(country))) +
geom_col()
# 대륙별로 gdp 당 평균기대수명 구하고 대륙별로 색깔 다르게 해서 선 그래프 그리기
ggplot(data=gapminder, aes(x=gdpPercap, y=lifeExp, col=factor(continent))) +
geom_line() +
scale_x_log1()
# Oceania 대륙 국가들의 연도에 따른 1인당 GDP 추이를 분석해보려 한다.
gapminder_africa = gapminder %>%
filter(continent == 'Oceania')
# Oceania 대륙 국가들의 연도에 따른 1인당 GDP 추이를 분석해보려 한다.
gapminder_oceania = gapminder %>%
filter(continent == 'Oceania')
# Oceania 대륙 국가들의 연도에 따른 1인당 GDP 추이를 분석해보려 한다.
gapminder_oceania = gapminder %>%
filter(continent == 'Oceania')
gapminder$continent
table(gapminder$continent)
# Oceania 대륙 국가들의 연도에 따른 1인당 GDP 추이를 분석해보려 한다.
gapminder_oceania = gapminder %>%
filter(continent == 'Oceania')
View(gapminder_oceania)
ggplot(data=gapminder_oceania, aes(x=year, y=gdpPerCap))
ggplot(data=gapminder_oceania, aes(x=year, y=gdpPerCap)) +
geom_line()
ggplot(data=gapminder_oceania, aes(x=year, y=gdpPercap)) +
geom_line()
ggplot(data=gapminder_oceania, aes(x=year, y=gdpPercap, col=factor(country))) +
geom_line()
# Oceania 대륙 국가들의 연도에 따른 1인당 GDP 추이를 분석해보려 한다.
gapminder_oceania = gapminder %>%
filter(continent == 'Oceania')
ggplot(data=gapminder_oceania, aes(x=year, y=gdpPercap, col=factor(country))) +
geom_line()
patients
name = c('철수, 춘향, 길동')
age = c(22, 20, 25)
gender = factor(c("M", "F", "M"))
blood_type = factor(c('A', 'B', 'O'))
blood.type = factor(c('A', 'B', 'O'))
patients = data.frame(name, age, gender, blood.type)
patients
name = c('철수', '춘향', '길동')
patients = data.frame(name, age, gender, blood.type)
patients
patients$name
# $속성명과 [] 통해 요소 접근
patients$name
patients[1, ]
patients[1, 2]
patients[, 2]
# 비교/논리 연산자를 이용하여 조건을 구성하여 원하는 데이터만 필터링
patients[patients$name=='철수', ]
# 비교/논리 연산자를 이용하여 조건을 구성하여 원하는 데이터만 필터링
patients[patients$name='철수', c(1, 2)]
# 비교/논리 연산자를 이용하여 조건을 구성하여 원하는 데이터만 필터링
patients[patients$name=='철수', c(1, 2)]
patients[patients$name=='철수', c('name', 'blood.type')]
# 콤마를 빠트렸을 때 ...
patients[patients$name=='철수']
patients$name=='철수'
# 논리형 벡터와 동일한 결과
patients[c(T, F, F)]
glimps(gapminder)
library(gapminder)
library(dplyr)
glimps(gapminder)
glimpse(gapminder)
gapminder[, ("country", "lifeExp")]
gapminder[, c("country", "lifeExp")]
gapminder
gapminder[, c("country", "lifeExp")]
# select
gapminder[, c("country", "lifeExp", "year")]
# filter
gapminder[1:15, ]
gapminder[gapminder$country == "Croatia",]
# select + filter
gapminder[gapminder$country == "Croatia", pop]
# select + filter
gapminder[gapminder$country == "Croatia", "pop"]
gapminder[gapminder$country == "Croatia", c("lifeExp", "pop")]
# 논리연산자로 조건식 결합
gapminder[gapminder$country == "Croatia" & gapminder$year > 1990, c("lifeExp", "pop")]
# apply
apply(gapminder[gapminder$country == "Croatia", c("lifeExp", "pop")], 2, mean)
