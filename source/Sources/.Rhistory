load("C:/Sources/.RData")
load("C:/Sources/.RData")
source('C:/Sources/ch10.R')
source('C:/Sources/ch10.R')
library(text2vec)
library(text2vec)
str(movie_review)
head(movie_review)
train_list = createDataPartition(y= movie_review$sentiment, p = 0.6, list =  FALSE)
mtrain = movie_review[train_list, ]
mtest = movie_review[-train_list, ]
doc = Corpus(VectorSource(mtrain$review))
doc = tm_map(doc, content_transformer(tolower))
train_list = createDataPartition(y= movie_review$sentiment, p = 0.6, list =  FALSE)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(gapminder)
library(dplyr)
library(text2vec)
str(movie_review)
head(movie_review)
train_list = createDataPartition(y= movie_review$sentiment, p = 0.6, list =  FALSE)
library(caret)
train_list = createDataPartition(y= movie_review$sentiment, p = 0.6, list =  FALSE)
mtrain = movie_review[train_list, ]
mtest = movie_review[-train_list, ]
doc = Corpus(VectorSource(mtrain$review))
library(RCurl)
library(XML)
library(tm)
library(SnowballC)
library(wordcloud)
doc = Corpus(VectorSource(mtrain$review))
doc = tm_map(doc, content_transformer(tolower))
doc = tm_map(doc, removeNumbers)
doc = tm_map(doc, removeWords, stopwords('english'))
doc = tm_map(doc, removePunctuation)
doc = tm_map(doc, stripWhitespace)
dtm = DocumentTermMatrix(doc)
dim(dtm)
str(dim)
inspect(dtm)
dtm_small = removeSparseTerms(dtm, 0.90)
X = as.matrix(dtm_small)
dataTrain = as.data.frame(cbind(mtrain$sentiment, X))
dataTrain$V1 = as.factor(dataTrain$V1)
colnames(dataTrain)[1] = 'y'
library(rpart)
r = rpart(y~., data = dataTrain)
printcp(r)
par(mfrow = c(1, 1), xpd = NA)
plot(r)
library(randomForest)
f = randomForest(y~., data = dataTrain)
f = randomForest(y~., data = dataTrain)
docTest = Corpus(VectorSource(mtrain$review))
docTest = tm_map(doc, content_transformer(tolower))
docTest = tm_map(doc, removeNumbers)
docTest = tm_map(doc, removeWords, stopwords('english'))
docTest = tm_map(doc, removePunctuation)
docTest = tm_map(doc, stripWhitespace)
dtmTest = DocumentTermMatrix(docTest, control=list(dictionary=dtm_small$dimnames$Terms))
dim(dtmTest)
str(dtmTest)
inspect(dtmTest)
X = as.matrix(dtmTest)
dataTest = as.data.frame(cbind(mtest$sentiment, X))
dataTest$V1 = as.factor(dataTest$V1)
colnames(dataTest)[1] = 'y'
pr = predict(r, newdata = dataTest, type = 'class')
table(pr, dataTest$y)
pf = predict(f, newdata = dataTest)
table(pf, dataTest$y)
